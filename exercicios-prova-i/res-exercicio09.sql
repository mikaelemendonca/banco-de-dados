
-- 1. Criar um procedimento SP_CLASSIFICA_CLIENTE para classificar um Cliente como NORMAL ou VIP. O procedimento deve receber como parâmetros de entrada a quantidade de contas que o Cliente possui e a soma dos saldos de suas contas. O procedimento deve apresentar um parâmetro de saída informando se o Cliente é NORMAL ou VIP. O cliente será classificado de acordo com a seguinte regra:
/*
	Se o Saldo Total >= 10.000
		O Cliente é VIP
	Se o Saldo Total >= 5.000 e < 10.000 e o Cliente Possuir mais de 2 contas
		O Cliente é VIP
	Caso Contrário o Cliente é Normal.
*/
USE exercicio09

SELECT * FROM TB_CLIENTE
SELECT * FROM TB_CONTA

INSERT INTO TB_CLIENTE VALUES (1, 'MIKAELE', NULL, '1997-02-28', NULL),
							  (2, 'EDIELMA', NULL, '1989-06-20', NULL)
INSERT INTO TB_CLIENTE VALUES (3, 'MARIA', NULL, '1990-03-08', NULL)
INSERT INTO TB_CONTA VALUES (1, 1, 10000), (2, 2, 4000), (3, 2, 1000), (4, 3, 4000)
INSERT INTO TB_CONTA VALUES (5, 2, 10000)

DROP PROCEDURE SP_CLASSIFICA_CLIENTE 
CREATE PROCEDURE SP_CLASSIFICA_CLIENTE (@QTCONTAS INT, @SOMASALDOS NUMERIC(10,2), @SAIDA VARCHAR(20) OUTPUT) 
AS
IF (@SOMASALDOS >= 10000)
	BEGIN
		SET @SAIDA = 'VIP'
	END
ELSE
	IF (@SOMASALDOS >= 5000 AND @SOMASALDOS < 10000 AND @QTCONTAS > 2)
		BEGIN
			SET @SAIDA = 'VIP'
		END
	ELSE
		BEGIN
			SET @SAIDA = 'NORMAL'
		END

DECLARE @S VARCHAR(20)
EXEC SP_CLASSIFICA_CLIENTE 2, 10000, @S OUTPUT
PRINT @S

-- 2. Criar um procedimento SP_ATUALIZA_TIPO_CLENTE utilizando cursores para varrer a tabela TB_CLIENTE e, utilizando o procedimento desenvolvido da questão 1, atualizar o atributo TIPO_CLIENTE na tabela TB_CLIENTE para NORMAL ou VIP de acordo com as informações contidas na tabela TB_CONTA.

CREATE PROCEDURE SP_ATUALIZA_TIPO_CLENTE
AS
DECLARE @QTCONTA INT, @SOMASALDO NUMERIC(10,2), @TPCLIENTE VARCHAR(20), @CD_CLIENTE INT
DECLARE C_CLIENTE CURSOR FOR
	SELECT CL.CD_CLIENTE, SUM(CO.SALDO) AS SALDOTOTAL, COUNT(CO.NR_CONTA) AS QTCONTAS 
		FROM TB_CLIENTE AS CL
		INNER JOIN TB_CONTA AS CO ON CL.CD_CLIENTE = CO.CD_CLIENTE  
		GROUP BY CL.CD_CLIENTE
	OPEN C_CLIENTE
	FETCH C_CLIENTE INTO @CD_CLIENTE, @SOMASALDO, @QTCONTA
	WHILE (@@FETCH_STATUS  = 0)
		BEGIN
			EXEC SP_CLASSIFICA_CLIENTE @QTCONTA, @SOMASALDO, @TPCLIENTE OUTPUT
			UPDATE TB_CLIENTE SET TIPO_CLIENTE = @TPCLIENTE WHERE CD_CLIENTE = @CD_CLIENTE
			FETCH C_CLIENTE INTO @CD_CLIENTE, @SOMASALDO, @QTCONTA
		END
CLOSE C_CLIENTE
DEALLOCATE C_CLIENTE

EXEC SP_ATUALIZA_TIPO_CLENTE
SELECT * FROM TB_CLIENTE
UPDATE TB_CLIENTE SET TIPO_CLIENTE = NULL